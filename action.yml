name: Docker Swarm Deployment Action
description: Deploy your Docker Swarm apps in seconds. ðŸš€
author: Matchory GmbH

branding:
  icon: zap
  color: blue

inputs:
  stack-name:
    description: >-
      Name of the stack to deploy. Defaults to the repository name.
  version:
    description: >-
      Version for the deployment. Defaults to the tag name being built, or the
      commit hash.
  compose-file:
    description: |-
      Path to the Docker Compose file(s) to use for deployment relative to the repository root. Separate multiple files
      with colons (`:`). If omitted, the action will look for any of the following file variants, in order:
       - `docker-compose.production.yaml`
       - `docker-compose.production.yaml`
       - `docker-compose.prod.yml`
       - `docker-compose.prod.yml`
       - `.docker/docker-compose.yaml`
       - `.docker/docker-compose.yml`
       - `docker/docker-compose.yaml`
       - `docker/docker-compose.yml`
       - `docker-compose.yaml`
       - `docker-compose.yml`
  variables:
    description: >-
      Variables to pass to the deployment as a list of key-value pairs in the
      format `KEY=value`, separated by newlines, or as JSON object (e.g., from
      `${{ toJSON(vars) }}`). Variables override those in the process 
      environment and can be used to pass through secrets or configs.
    default: ""
  secrets:
    description: >-
      Secrets to pass to the deployment as JSON object (e.g., from
      `${{ toJSON(secrets) }}`) or as key-value pairs in the format `KEY=value`,
      separated by newlines. Secrets have higher priority than variables and
      override those in the process environment.
    default: ""
  exclude-variables:
    description: >-
      List of variable names to exclude from the final deployment, separated by
      newlines. Applies to variables from environment, variables, and secrets 
      sources. Does not affect extra-variables which have highest priority.
    default: ""
  extra-variables:
    description: >-
      Additional variables to add at runtime as key-value pairs in the format
      `KEY=value`, separated by newlines. These have the highest priority and
      override all other variable sources.
    default: ""
  env-var-prefix:
    description: >-
      Prefix filter for environment variables to automatically load as secrets.
    default: "DEPLOYMENT"
  manage-variables:
    description: >-
      Whether to automatically manage configs and secrets. If set to `false`,
      the action will leave the configs and secrets in the stack untouched.
    default: "true"
  strict-variables:
    description: >-
      Whether to disable automatic fallback to matching environment variables
      for file variable sources that don't exist in the working directory. This
      is useful for ensuring that the action fails if a file variable source is
      not found.
    default: "true"
  key-interpolation:
    description: >-
      Whether to enable interpolation of environment variables within keys in
      the Compose Specification, in addition to values. This is not supported by
      the Compose Spec, and thus needs to be enabled explicitly.
    default: "false"
  monitor:
    description: >-
      Whether to monitor the stack after the deployment is complete. If an error
      occurs, the action will fail.
    default: "false"
  monitor-timeout:
    description: >-
      Timeout for post-deployment monitoring in seconds.
    default: "300"
  monitor-interval:
    description: >-
      Interval for post-deployment monitoring checks in seconds.
    default: "5"

outputs:
  status:
    description: "Deployment status"
  compose-spec:
    description: "Docker Compose spec used for deployment"
  stack-name:
    description: "Name of the stack deployed"
  version:
    description: "Version of the stack deployed"

runs:
  using: node20
  main: dist/index.cjs
